# Enable C++ support
language: cpp

os:
  - osx
  - linux

dist: trusty
sudo: required

compiler:
  - clang

git: 
  depth: 1

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      # suggested by https://stackoverflow.com/questions/29721240/ci-for-qt-app-build-with-different-qt-versions      
      #sudo add-apt-repository --yes ppa:beineri/opt-qt551-trusty
      sudo add-apt-repository --yes ppa:beineri/opt-qt594-trusty
      sudo apt-get update -qq
    fi

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]
    then
      brew update > /dev/null
      brew install llvm
      export PATH="/usr/local/opt/llvm/bin:$PATH"
      brew install qt5      
      export QTDIR="/usr/local/opt/qt5"
    fi
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]
    then
      sudo apt-get -y install qt59[QTPACKAGE]
      #sudo apt-get -y install qt5-default
      #sudo apt-get -y install qtscript5-dev
      #sudo apt-get -y install libqt5xmlpatterns5-dev
      qmake --version
      echo $QMAKESPEC
      export QMAKESPEC="linux-clang"
      
    fi
  - cd ..
  - git clone --depth=1 --branch=devel https://github.com/cnr-isti-vclab/vcglib.git
  - cd meshlab
cache:
#  directories:
#    - $HOME/Library/Caches/Homebrew
#    - $HOME/vcglib
#    - $HOME/meshlab/src/external/lib/macx64
script:
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then PATH="/usr/local/opt/llvm/bin:$PATH"          ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then which clang             ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then ln -s /usr/local/opt/llvm/bin/clang /usr/local/opt/llvm/bin/clang++-mp-3.9       ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then PATH="$QTDIR/bin:$PATH"          ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then LDFLAGS=-L$QTDIR/lib            ;fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then CPPFLAGS=-I$QTDIR/include        ;fi
  #- if [[ "$TRAVIS_OS_NAME" == "linux"   ]]; then source /opt/qt55/bin/qt55-env.sh        ;fi
  - if [[ "$TRAVIS_OS_NAME" == "linux"   ]]; then source /opt/qt59/bin/qt59-env.sh        ;fi
  - cd src
  - cd external
  - qmake --version
  - qmake CONFIG+=release PREFIX=/usr
  - make -j$(nproc)
  - cd ..
  - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then qmake "QMAKE_LFLAGS+=-L/usr/local/opt/llvm/lib -lomp" meshlab_full.pro; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then qmake meshlab_full.pro CONFIG+=release PREFIX=/usr; fi
  - make -j$(nproc)
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then make INSTALL_ROOT=appdir -j$(nproc) install ; find appdir/; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then chmod a+x linuxdeployqt-continuous-x86_64.AppImage; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export VERSION=$(git rev-parse --short HEAD) # linuxdeployqt uses this for naming the file; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -bundle-non-qt-libs; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage; fi

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then bash upload.sh APPNAME*.AppImage*; fi

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
 
